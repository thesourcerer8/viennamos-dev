********************************
**** ViennaGrid Change Logs ****
********************************

*** Version 2.0.x ***

-- Version 2.0.0 --
The ViennaGrid internals have been completely redesigned for higher flexibility.
Some rather significent adjustments to the user API were necessary.
 - Renamed the old domain_t to mesh in order to avoid ambiguities with the mathematical problem domain.
 - Replaced viennagrid::ncells<>() with viennagrid::elements<>() to obtain range objects.
 - As a consequence of moving away from ncells<>, now element tags are used instead of the topologic dimension to select elements.
 - Added support for two dynamic element types: polygon and PLCs.
 - Added support for neighbor iteration. This way one no longer needs to code the boundary/coboundary iterations by hand.
 - Added support for multiple segmentations. This is a generalization of the old segment concept, where elements could be part of at most one segment.
 - New algorithms: angles, intersection, scaling, seed point segmenting.
 - Accessors are now consistently used for accessing quantities rather than ViennaData. This makes the implementation more generic and provides better support for user storage.
 - New storage layer, re-wrote most of the internals.


*** Version 1.0.x ***

-- Version 1.0.1 --
This is a maintenance release, mostly fixing minor compilation problems on some compilers and opererating systems. Other notable changes
 - Added \lstinline|distance()| function for computing the distance between points, cell, etc.
 - Voronoi quantities can now also be accessed in a more fine-grained manner: Volume and contributions for each cell attached to a vertex or edge.
 - Added quantity transfer: Interpolates quantities on a $m$-cells can be transferred to $n$-cells. Both $m<n$ and $n>m$ are supported.


-- Version 1.0.0 --
First release

